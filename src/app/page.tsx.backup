"use client";

import { useState, useRef, useEffect } from "react";
import Navbar from "./components/navbar";
import Hero from "./components/hero";

export default function Home() {
  const [showAllCourses, setShowAllCourses] = useState(false);
  const [selectedCourse, setSelectedCourse] = useState("");
  const [selectedCategory, setSelectedCategory] = useState("الكل");
  const [showReviewForm, setShowReviewForm] = useState(false);

  // Voice recording states
  const [isRecording, setIsRecording] = useState(false);
  const [audioBlob, setAudioBlob] = useState<Blob | null>(null);
  const [audioUrl, setAudioUrl] = useState<string | null>(null);
  const [recordingTime, setRecordingTime] = useState(0);
  const [isPlaying, setIsPlaying] = useState(false);
  const [recordingError, setRecordingError] = useState<string | null>(null);

  // Form states
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [isUploadingVoice, setIsUploadingVoice] = useState(false);
  const [formErrors, setFormErrors] = useState<{ [key: string]: string }>({});
  const [submitSuccess, setSubmitSuccess] = useState(false);
  const [submitMessage, setSubmitMessage] = useState("");

  const mediaRecorderRef = useRef<MediaRecorder | null>(null);
  const audioRef = useRef<HTMLAudioElement | null>(null);
  const timerRef = useRef<NodeJS.Timeout | null>(null);
  const [reviewFormData, setReviewFormData] = useState({
    courseId: 0,
    studentName: "",
    rating: 5,
    comment: "",
    jobTitle: "",
    company: "",
  });
  const [reviews, setReviews] = useState([
    {
      id: 1,
      courseId: 1,
      studentName: "أحمد محمد علي",
      rating: 5,
      comment:
        "برنامج استثنائية بكل المقاييس! المحتوى منظم بشكل احترافي والمدربون على أعلى مستوى من الخبرة. الشهادة المعتمدة من جامعة عين شمس ساعدتني في الحصول على وظيفة أحلامي في شركة تقنية رائدة. أنصح بها بشدة لكل من يريد تطوير مهاراته البرمجية.",
      date: "2024-01-15",
      verified: true,
      jobTitle: "مطور برمجيات",
      company: "شركة التقنية المتقدمة",
    },
    {
      id: 2,
      courseId: 2,
      studentName: "فاطمة علي حسن",
      rating: 5,
      comment:
        "تجربة تعليمية متميزة! تعلمت أحدث تقنيات تطوير الويب وأصبحت قادرة على إنشاء تطبيقات احترافية. الدعم الفني المقدم على مدار الساعة كان رائعاً. الشهادة معتمدة ومعترف بها في السوق المحلي والدولي.",
      date: "2024-01-20",
      verified: true,
      jobTitle: "مطورة ويب",
      company: "استوديو الإبداع الرقمي",
    },
    {
      id: 3,
      courseId: 6,
      studentName: "محمد حسن إبراهيم",
      rating: 4,
      comment:
        "برنامج إدارة المشاريع كانت مفيدة جداً في تطوير مهاراتي القيادية. المحتوى عملي ومفصل، والمرونة في التعلم ساعدتني في الموازنة بين العمل والدراسة. الشهادة ساهمت في ترقيتي إلى منصب مدير مشاريع.",
      date: "2024-01-25",
      verified: true,
      jobTitle: "مدير مشاريع",
      company: "مجموعة الاستثمارات الكبرى",
    },
    {
      id: 4,
      courseId: 1,
      studentName: "سارة أحمد محمود",
      rating: 5,
      comment:
        "أفضل برنامج برمجة أخذتها على الإطلاق! المدربون متخصصون جداً والمحتوى محدث باستمرار. تعلمت البرمجة من الصفر وأصبحت قادرة على العمل كمبرمجة محترفة. الشهادة ساعدتني في الحصول على ترقية كبيرة في عملي.",
      date: "2024-02-01",
      verified: true,
      jobTitle: "مبرمجة أولى",
      company: "بنك التكنولوجيا المالية",
    },
    {
      id: 5,
      courseId: 3,
      studentName: "علي محمود السيد",
      rating: 4,
      comment:
        "برنامج تحليل البيانات كانت مفيدة جداً في تطوير مهاراتي التحليلية. تعلمت استخدام أدوات حديثة مثل Python وR وأصبحت قادراً على اتخاذ قرارات مدروسة بناءً على البيانات. المحتوى عملي ومفصل.",
      date: "2024-02-05",
      verified: true,
      jobTitle: "محلل بيانات",
      company: "شركة الاستشارات الإدارية",
    },
    {
      id: 6,
      courseId: 8,
      studentName: "نور الدين محمد",
      rating: 5,
      comment:
        "برنامج التسويق الرقمي غيرت مساري المهني بالكامل! تعلمت أحدث استراتيجيات التسويق الرقمي وأصبحت قادراً على إدارة حملات تسويقية ناجحة. الشهادة ساعدتني في فتح وكالة تسويق رقمية خاصة بي.",
      date: "2024-02-10",
      verified: true,
      jobTitle: "مؤسس وكالة تسويق رقمية",
      company: "وكالة النور للتسويق الرقمي",
    },
    {
      id: 7,
      courseId: 13,
      studentName: "مريم أحمد فتحي",
      rating: 5,
      comment:
        "برنامج التصميم الجرافيكي كانت رائعة! تعلمت استخدام برامج التصميم الاحترافية وأصبحت قادرة على إنشاء تصاميم مبدعة. المدربون فنانين حقيقيين والبيئة التعليمية محفزة للإبداع. الشهادة ساعدتني في العمل كمصممة جرافيكية مستقلة.",
      date: "2024-02-15",
      verified: true,
      jobTitle: "مصممة جرافيكية مستقلة",
      company: "استوديو الإبداع البصري",
    },
    {
      id: 8,
      courseId: 10,
      studentName: "خالد محمود عبدالله",
      rating: 4,
      comment:
        "برنامج المحاسبة المالية ساعدتني في فهم المبادئ المحاسبية بشكل عملي. المحتوى منظم والتمارين العملية مفيدة جداً. الشهادة ساهمت في تحسين أدائي في العمل كمحاسب. أنصح بها لكل من يعمل في المجال المالي.",
      date: "2024-02-20",
      verified: true,
      jobTitle: "محاسب أول",
      company: "شركة المحاسبة والمراجعة المتقدمة",
    },
  ]);

  const handleCourseSelect = (courseName: string) => {
    setSelectedCourse(courseName);
    // Scroll to registration form
    setTimeout(() => {
      const registerSection = document.getElementById("register");
      if (registerSection) {
        registerSection.scrollIntoView({ behavior: "smooth" });
      }
    }, 400);
  };

  const handleCategoryFilter = (category: string) => {
    setSelectedCategory(category);
    setShowAllCourses(false); // Reset to show limited courses when filtering
  };

  const handleSeatBooking = (courseId: number) => {
    // In a real app, this would make an API call
    const updatedCourses = courses.map((course) =>
      course.id === courseId && course.availableSeats > 0
        ? { ...course, availableSeats: course.availableSeats - 1 }
        : course
    );
    // For demo purposes, we'll just show an alert
    const course = courses.find((c) => c.id === courseId);
    if (course && course.availableSeats > 0) {
      alert(
        `تم حجز مقعد في برنامج ${course.name}! المقاعد المتبقية: ${
          course.availableSeats - 1
        }`
      );
    } else {
      alert("عذراً، لا توجد مقاعد متاحة في هذه البرنامج حالياً");
    }
  };

  const handleReviewSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (reviewFormData.studentName && reviewFormData.comment) {
      const newReview = {
        id: reviews.length + 1,
        courseId: reviewFormData.courseId,
        studentName: reviewFormData.studentName,
        rating: reviewFormData.rating,
        comment: reviewFormData.comment,
        date: new Date().toISOString().split("T")[0],
        verified: true,
        jobTitle: reviewFormData.jobTitle || "طالب",
        company: reviewFormData.company || "غير محدد",
      };
      setReviews([...reviews, newReview]);
      setReviewFormData({
        courseId: 0,
        studentName: "",
        rating: 5,
        comment: "",
        jobTitle: "",
        company: "",
      });
      setShowReviewForm(false);
      alert("تم إرسال تقييمك بنجاح! شكراً لك على مشاركة تجربتك");
    }
  };

  const openReviewForm = (courseId: number) => {
    setReviewFormData({ ...reviewFormData, courseId });
    setShowReviewForm(true);
  };

  // Voice recording functions
  const startTimer = () => {
    timerRef.current = setInterval(() => {
      setRecordingTime((prev) => prev + 1);
    }, 1000);
  };

  const stopTimer = () => {
    if (timerRef.current) {
      clearInterval(timerRef.current);
      timerRef.current = null;
    }
  };

  const formatTime = (seconds: number) => {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${mins.toString().padStart(2, "0")}:${secs
      .toString()
      .padStart(2, "0")}`;
  };

  const startRecording = async () => {
    try {
      setRecordingError(null);
      const stream = await navigator.mediaDevices.getUserMedia({
        audio: {
          echoCancellation: true,
          noiseSuppression: true,
          sampleRate: 44100,
        },
      });

      const mediaRecorder = new MediaRecorder(stream, {
        mimeType: "audio/webm;codecs=opus",
      });

      const chunks: BlobPart[] = [];

      mediaRecorder.ondataavailable = (event) => {
        if (event.data.size > 0) {
          chunks.push(event.data);
        }
      };

      mediaRecorder.onstop = () => {
        const blob = new Blob(chunks, { type: "audio/webm;codecs=opus" });
        setAudioBlob(blob);
        setAudioUrl(URL.createObjectURL(blob));

        // Stop all tracks to release the microphone
        stream.getTracks().forEach((track) => track.stop());
      };

      mediaRecorderRef.current = mediaRecorder;
      mediaRecorder.start();
      setIsRecording(true);
      setRecordingTime(0);
      startTimer();
    } catch (error) {
      console.error("Error starting recording:", error);
      if (error instanceof Error) {
        if (error.name === "NotAllowedError") {
          setRecordingError(
            "يرجى السماح بالوصول للميكروفون لتسجيل الرسالة الصوتية"
          );
        } else if (error.name === "NotFoundError") {
          setRecordingError("لم يتم العثور على ميكروفون متاح");
        } else {
          setRecordingError("حدث خطأ أثناء بدء التسجيل");
        }
      }
    }
  };

  const stopRecording = () => {
    if (mediaRecorderRef.current && isRecording) {
      mediaRecorderRef.current.stop();
      setIsRecording(false);
      stopTimer();
    }
  };

  const playRecording = () => {
    if (audioUrl && audioRef.current) {
      if (isPlaying) {
        audioRef.current.pause();
        setIsPlaying(false);
      } else {
        audioRef.current.src = audioUrl;
        audioRef.current.play();
        setIsPlaying(true);

        audioRef.current.onended = () => {
          setIsPlaying(false);
        };
      }
    }
  };

  const deleteRecording = () => {
    if (audioUrl) {
      URL.revokeObjectURL(audioUrl);
    }
    setAudioBlob(null);
    setAudioUrl(null);
    setRecordingTime(0);
    setIsPlaying(false);
    if (audioRef.current) {
      audioRef.current.pause();
      audioRef.current.src = "";
    }
  };

  // API Configuration
  const API_BASE_URL =
    process.env.NEXT_PUBLIC_API_BASE_URL || "http://localhost:8080/api/v1";

  // Form validation function
  const validateForm = (formData: FormData) => {
    const errors: { [key: string]: string } = {};

    const firstName = (formData.get("firstName") as string)?.trim();
    const phone = (formData.get("phone") as string)?.trim();
    const course = formData.get("course") as string;
    const preferredMethod = formData.get("preferredMethod") as string;

    if (!firstName) {
      errors.firstName = "الاسم مطلوب";
    } else if (firstName.length < 2) {
      errors.firstName = "الاسم يجب أن يكون أكثر من حرفين";
    }

    if (!phone) {
      errors.phone = "رقم الهاتف مطلوب";
    } else if (!/^[0-9+\-\s()]+$/.test(phone)) {
      errors.phone = "رقم الهاتف غير صحيح";
    }

    if (!course) {
      errors.course = "يرجى اختيار البرنامج التدريبية";
    }

    if (!preferredMethod) {
      errors.preferredMethod = "يرجى اختيار طريقة التعلم";
    }

    return errors;
  };

  // Upload voice message function using file.io (temporary solution)
  const uploadVoiceMessage = async (audioBlob: Blob): Promise<string> => {
    setIsUploadingVoice(true);
    try {
      // Option 1: Try Cloudinary first
      const cloudName = process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME;

      if (cloudName) {
        const formData = new FormData();
        formData.append("file", audioBlob);
        formData.append("upload_preset", "voice_messages");
        formData.append("resource_type", "video");
        formData.append("folder", "eertqaa/voice-messages");

        const timestamp = Date.now();
        formData.append("public_id", `voice_message_${timestamp}`);

        console.log("Trying Cloudinary upload...");

        const response = await fetch(
          `https://api.cloudinary.com/v1_1/${cloudName}/upload`,
          {
            method: "POST",
            body: formData,
          }
        );

        const result = await response.json();

        if (response.ok) {
          console.log("Cloudinary upload successful:", result.secure_url);
          return result.secure_url;
        } else {
          console.warn("Cloudinary failed, trying fallback:", result);
        }
      }

      // Option 2: Fallback to file.io (temporary file hosting)
      console.log("Using fallback upload service...");

      const fallbackFormData = new FormData();
      fallbackFormData.append(
        "file",
        audioBlob,
        `voice_message_${Date.now()}.webm`
      );

      const fallbackResponse = await fetch("https://file.io", {
        method: "POST",
        body: fallbackFormData,
      });

      if (!fallbackResponse.ok) {
        throw new Error(`Fallback upload failed: ${fallbackResponse.status}`);
      }

      const fallbackResult = await fallbackResponse.json();

      if (fallbackResult.success && fallbackResult.link) {
        console.log("Fallback upload successful:", fallbackResult.link);
        return fallbackResult.link;
      } else {
        throw new Error("Fallback upload failed");
      }
    } catch (error) {
      console.error("Voice upload error:", error);
      throw new Error("فشل في رفع الرسالة الصوتية");
    } finally {
      setIsUploadingVoice(false);
    }
  };

  // Clear form errors when user interacts with inputs
  const clearFieldError = (fieldName: string) => {
    if (formErrors[fieldName]) {
      setFormErrors((prev) => {
        const newErrors = { ...prev };
        delete newErrors[fieldName];
        return newErrors;
      });
    }
  };

  const handleFormSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    // Reset previous states
    setFormErrors({});
    setSubmitSuccess(false);
    setSubmitMessage("");

    const formData = new FormData(e.target as HTMLFormElement);

    // Validate form
    const errors = validateForm(formData);
    if (Object.keys(errors).length > 0) {
      setFormErrors(errors);
      return;
    }

    setIsSubmitting(true);

    try {
      // Get form values
      const firstName = (formData.get("firstName") as string).trim();
      const phone = (formData.get("phone") as string).trim();
      const course = formData.get("course") as string;
      const preferredMethod = formData.get("preferredMethod") as string;
      const message = (formData.get("message") as string)?.trim() || "";

      let voiceMessageUrl = "";

      // Upload voice message if exists
      if (audioBlob) {
        try {
          voiceMessageUrl = await uploadVoiceMessage(audioBlob);
        } catch (error) {
          setFormErrors({
            voiceMessage:
              error instanceof Error
                ? error.message
                : "فشل في رفع الرسالة الصوتية",
          });
          setIsSubmitting(false);
          return;
        }
      }

      // Prepare API payload
      const payload = {
        name: firstName,
        phone: phone,
        selectedProgram: course,
        learningPreference:
          preferredMethod === "online"
            ? "أونلاين عبر زوم"
            : "حضورياً في الجامعة",
        message: message,
        voiceMessage: voiceMessageUrl,
      };

      // Submit form to API
      const response = await fetch(`${API_BASE_URL}/leads`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(payload),
      });

      if (!response.ok) {
        const errorData = await response.json().catch(() => ({}));
        throw new Error(
          errorData.message || `HTTP ${response.status}: فشل في إرسال الطلب`
        );
      }

      const result = await response.json();

      // Success handling
      setSubmitSuccess(true);
      setSubmitMessage(
        `تم إرسال طلب التسجيل بنجاح! رقم الطلب: ${
          result.data?.id?.substring(0, 8) || "غير محدد"
        }`
      );

      // Reset form
      (e.target as HTMLFormElement).reset();
      setSelectedCourse("");
      deleteRecording();

      // Scroll to success message
      setTimeout(() => {
        const successElement = document.getElementById("success-message");
        if (successElement) {
          successElement.scrollIntoView({
            behavior: "smooth",
            block: "center",
          });
        }
      }, 100);
    } catch (error) {
      console.error("Form submission error:", error);
      setFormErrors({
        submit:
          error instanceof Error
            ? error.message
            : "حدث خطأ أثناء إرسال الطلب. يرجى المحاولة مرة أخرى.",
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  // Cleanup effect
  useEffect(() => {
    return () => {
      // Cleanup on component unmount
      stopTimer();
      if (audioUrl) {
        URL.revokeObjectURL(audioUrl);
      }
      if (
        mediaRecorderRef.current &&
        mediaRecorderRef.current.state !== "inactive"
      ) {
        mediaRecorderRef.current.stop();
      }
    };
  }, [audioUrl]);

  const courses = [
    {
      id: 1,
      name: "أساسيات البرمجة",
      category: "تكنولوجيا",
      availableSeats: 12,
      rating: 4.8,
      reviewCount: 156,
      price: 1200,
      duration: "8 أشهر",
      contentSummary:
        "تعلم أساسيات البرمجة من الصفر، المتغيرات والدوال، هياكل البيانات الأساسية، مفاهيم البرمجة الكائنية، والخوارزميات البسيطة مع تطبيقات عملية.",
    },
    {
      id: 2,
      name: "تطوير تطبيقات الويب",
      category: "تكنولوجيا",
      availableSeats: 8,
      rating: 4.9,
      reviewCount: 203,
      price: 1500,
      duration: "10 أشهر",
      contentSummary:
        "إتقان تطوير الويب الحديث بـ HTML5، CSS3، JavaScript، React، Node.js، قواعد البيانات، وتطوير تطبيقات ويب متكاملة وتفاعلية.",
    },
    {
      id: 3,
      name: "تحليل البيانات",
      category: "تكنولوجيا",
      availableSeats: 3,
      rating: 4.7,
      reviewCount: 98,
      price: 1800,
      duration: "12 شهر",
      contentSummary:
        "تعلم تحليل البيانات باستخدام Python، pandas، NumPy، التصور البياني، الإحصاء التطبيقي، وبناء نماذج تنبؤية لاتخاذ قرارات مدروسة.",
    },
    {
      id: 4,
      name: "الأمن السيبراني",
      category: "تكنولوجيا",
      availableSeats: 0,
      rating: 4.9,
      reviewCount: 87,
      price: 2000,
      duration: "14 شهر",
      contentSummary:
        "حماية الأنظمة والشبكات، اختبار الاختراق، تحليل التهديدات، أمان التطبيقات، والاستجابة للحوادث الأمنية مع شهادات دولية.",
    },
    {
      id: 5,
      name: "الذكاء الاصطناعي",
      category: "تكنولوجيا",
      availableSeats: 5,
      rating: 4.8,
      reviewCount: 134,
      price: 2200,
      duration: "16 شهر",
      contentSummary:
        "أسس الذكاء الاصطناعي، التعلم الآلي، الشبكات العصبية، معالجة اللغة الطبيعية، رؤية الحاسوب، وتطوير تطبيقات ذكية متقدمة.",
    },
    {
      id: 6,
      name: "إدارة المشاريع",
      category: "إدارة",
      availableSeats: 15,
      rating: 4.6,
      reviewCount: 189,
      price: 1000,
      duration: "6 أشهر",
      contentSummary:
        "منهجيات إدارة المشاريع الحديثة، التخطيط والتنفيذ، إدارة الفرق والموارد، مراقبة الأداء، وأدوات إدارة المشاريع الرقمية.",
    },
    {
      id: 7,
      name: "القيادة والإدارة",
      category: "إدارة",
      availableSeats: 7,
      rating: 4.7,
      reviewCount: 145,
      price: 1300,
      duration: "8 أشهر",
      contentSummary:
        "تطوير المهارات القيادية، اتخاذ القرارات الاستراتيجية، إدارة التغيير، بناء الفرق الفعالة، والتواصل القيادي المؤثر.",
    },
    {
      id: 8,
      name: "التسويق الرقمي",
      category: "تسويق",
      availableSeats: 18,
      rating: 4.5,
      reviewCount: 167,
      price: 1100,
      duration: "7 أشهر",
      contentSummary:
        "استراتيجيات التسويق الرقمي، وسائل التواصل الاجتماعي، إعلانات جوجل وفيسبوك، تحليل البيانات التسويقية، وتحسين محركات البحث.",
    },
    {
      id: 9,
      name: "التجارة الإلكترونية",
      category: "تسويق",
      availableSeats: 4,
      rating: 4.6,
      reviewCount: 112,
      price: 1400,
      duration: "9 أشهر",
      contentSummary:
        "بناء متاجر إلكترونية احترافية، إدارة المخزون والمبيعات، طرق الدفع الآمنة، خدمة العملاء الرقمية، وتحليل أداء المتجر الإلكتروني.",
    },
    {
      id: 10,
      name: "المحاسبة المالية",
      category: "مالية",
      availableSeats: 12,
      rating: 4.8,
      reviewCount: 201,
      price: 1600,
      duration: "10 أشهر",
    },
    {
      id: 11,
      name: "الاستثمار والأسواق المالية",
      category: "مالية",
      availableSeats: 6,
      rating: 4.7,
      reviewCount: 143,
      price: 1900,
      duration: "12 شهر",
    },
    {
      id: 12,
      name: "إدارة الموارد البشرية",
      category: "إدارة",
      availableSeats: 9,
      rating: 4.5,
      reviewCount: 128,
      price: 1200,
      duration: "8 أشهر",
    },
    {
      id: 13,
      name: "التصميم الجرافيكي",
      category: "تصميم",
      availableSeats: 2,
      rating: 4.9,
      reviewCount: 178,
      price: 1300,
      duration: "9 أشهر",
    },
    {
      id: 14,
      name: "التصميم الداخلي",
      category: "تصميم",
      availableSeats: 5,
      rating: 4.6,
      reviewCount: 95,
      price: 1500,
      duration: "11 شهر",
    },
    {
      id: 15,
      name: "اللغات الأجنبية",
      category: "لغات",
      availableSeats: 22,
      rating: 4.4,
      reviewCount: 234,
      price: 800,
      duration: "6 أشهر",
    },
    {
      id: 16,
      name: "الترجمة المتخصصة",
      category: "لغات",
      availableSeats: 1,
      rating: 4.8,
      reviewCount: 89,
      price: 1700,
      duration: "13 شهر",
    },
    {
      id: 17,
      name: "الصحة والسلامة المهنية",
      category: "صحة",
      availableSeats: 8,
      rating: 4.7,
      reviewCount: 156,
      price: 1100,
      duration: "7 أشهر",
    },
    {
      id: 18,
      name: "التغذية العلاجية",
      category: "صحة",
      availableSeats: 3,
      rating: 4.6,
      reviewCount: 102,
      price: 1400,
      duration: "9 أشهر",
    },
    {
      id: 19,
      name: "الطب البديل",
      category: "صحة",
      availableSeats: 0,
      rating: 4.5,
      reviewCount: 67,
      price: 1800,
      duration: "15 شهر",
    },
    {
      id: 20,
      name: "العلوم البيئية",
      category: "علوم",
      availableSeats: 7,
      rating: 4.3,
      reviewCount: 78,
      price: 1200,
      duration: "10 أشهر",
    },
    {
      id: 21,
      name: "الطاقة المتجددة",
      category: "علوم",
      availableSeats: 4,
      rating: 4.7,
      reviewCount: 91,
      price: 1600,
      duration: "12 شهر",
    },
    {
      id: 22,
      name: "الزراعة الحديثة",
      category: "زراعة",
      availableSeats: 16,
      rating: 4.4,
      reviewCount: 123,
      price: 1000,
      duration: "8 أشهر",
    },
    {
      id: 23,
      name: "الطب البيطري",
      category: "طب",
      availableSeats: 0,
      rating: 4.9,
      reviewCount: 45,
      price: 2500,
      duration: "20 شهر",
    },
    {
      id: 24,
      name: "التمريض المتقدم",
      category: "طب",
      availableSeats: 11,
      rating: 4.8,
      reviewCount: 167,
      price: 1800,
      duration: "14 شهر",
    },
    {
      id: 25,
      name: "العلاج الطبيعي",
      category: "طب",
      availableSeats: 6,
      rating: 4.7,
      reviewCount: 134,
      price: 2000,
      duration: "16 شهر",
    },
    {
      id: 26,
      name: "علم النفس التطبيقي",
      category: "علوم إنسانية",
      availableSeats: 3,
      rating: 4.6,
      reviewCount: 89,
      price: 1500,
      duration: "11 شهر",
    },
    {
      id: 27,
      name: "العلوم السياسية",
      category: "علوم إنسانية",
      availableSeats: 9,
      rating: 4.5,
      reviewCount: 112,
      price: 1300,
      duration: "9 أشهر",
    },
    {
      id: 28,
      name: "العلاقات الدولية",
      category: "علوم إنسانية",
      availableSeats: 2,
      rating: 4.7,
      reviewCount: 76,
      price: 1600,
      duration: "10 أشهر",
    },
    {
      id: 29,
      name: "الآثار والتراث",
      category: "علوم إنسانية",
      availableSeats: 4,
      rating: 4.4,
      reviewCount: 58,
      price: 1200,
      duration: "8 أشهر",
    },
    {
      id: 30,
      name: "السياحة والضيافة",
      category: "خدمات",
      availableSeats: 19,
      rating: 4.3,
      reviewCount: 145,
      price: 900,
      duration: "6 أشهر",
    },
  ];

  // Filter courses based on selected category
  const filteredCourses =
    selectedCategory === "الكل"
      ? courses
      : courses.filter((course) => course.category === selectedCategory);

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      {/* Navbar */}
      <Navbar />
      {/* Hero Section */}
      <Hero />

      {/* Courses Section */}
      <section
        id="courses"
        className="py-24 bg-gradient-to-br from-gray-50 to-blue-50"
      >
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-20">
            <div className="inline-flex items-center px-4 py-2 rounded-full bg-indigo-100 text-indigo-800 text-sm font-medium mb-6">
              <svg
                className="w-4 h-4 ml-2"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              برامج معتمدة
            </div>
            <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6 arabic-heading">
              برامجنا التدريبية
            </h2>
            <p className="text-center text-xl text-gray-600 mb-12 max-w-3xl mx-auto arabic-text">
              أكثر من 30 برنامج تدريبي متخصص في مختلف المجالات مع شهادات معتمدة
              من جامعة عين شمس وقابلة للتوثيق من وزارة الخارجيه
            </p>

            {/* Course Count */}
            <div className="text-center mb-6">
              <p className="text-lg text-gray-600 arabic-text">
                عرض {filteredCourses.length} من أصل {courses.length} برنامج
                تدريبية
                {selectedCategory !== "الكل" && ` في فئة ${selectedCategory}`}
              </p>
            </div>

            {/* Category Filter */}
            <div className="flex flex-wrap justify-center gap-3 mb-12">
              {[
                "الكل",
                "تكنولوجيا",
                "إدارة",
                "تسويق",
                "مالية",
                "تصميم",
                "لغات",
                "صحة",
                "علوم",
                "طب",
              ].map((category) => {
                const categoryCount =
                  category === "الكل"
                    ? courses.length
                    : courses.filter((course) => course.category === category)
                        .length;

                return (
                  <button
                    key={category}
                    onClick={() => handleCategoryFilter(category)}
                    className={`px-6 py-3 rounded-full text-sm font-medium transition-all duration-300 border shadow-sm hover:shadow-md transform hover:-translate-y-0.5 ${
                      selectedCategory === category
                        ? "bg-indigo-600 text-white border-indigo-600"
                        : "bg-white text-gray-700 hover:bg-indigo-600 hover:text-white border-gray-200 hover:border-indigo-600"
                    }`}
                  >
                    {category} ({categoryCount})
                  </button>
                );
              })}
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16">
            {filteredCourses.length === 0 ? (
              <div className="col-span-full text-center py-12">
                <div className="text-gray-500 text-lg mb-4">
                  <svg
                    className="w-16 h-16 mx-auto mb-4 text-gray-300"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={1}
                      d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.29-1.009-5.824-2.709"
                    />
                  </svg>
                  لا توجد برامج في هذه الفئة حالياً
                </div>
                <button
                  onClick={() => handleCategoryFilter("الكل")}
                  className="text-indigo-600 hover:text-indigo-800 font-semibold"
                >
                  عرض جميع البرامج
                </button>
              </div>
            ) : (
              (showAllCourses
                ? filteredCourses
                : filteredCourses.slice(0, 9)
              ).map((course, index) => (
                <div
                  key={course.id}
                  className="group bg-white rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 p-8 border border-gray-100 hover:border-indigo-200 transform hover:-translate-y-2"
                  style={{ animationDelay: `${index * 100}ms` }}
                >
                  {/* Course Header */}
                  <div className="flex justify-between items-start mb-6">
                    <div className="flex items-center space-x-3">
                      {/* <div className="w-12 h-12 bg-gradient-to-br from-indigo-500 to-blue-500 rounded-xl flex items-center justify-center">
                      <span className="text-white font-bold text-lg">
                        {course.id.toString().padStart(2, "0")}
                      </span>
                    </div> */}
                      <div>
                        <span className="px-3 py-1 bg-indigo-100 text-indigo-600 text-xs font-medium rounded-full">
                          {course.category}
                        </span>
                      </div>
                    </div>
                    <button className="text-gray-400 hover:text-indigo-600 transition-colors p-2 hover:bg-indigo-50 rounded-lg">
                      <svg
                        className="w-5 h-5"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth={2}
                          d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"
                        />
                      </svg>
                    </button>
                  </div>

                  {/* Course Content */}
                  <h3 className="text-xl font-bold text-gray-900 mb-4 group-hover:text-indigo-600 transition-colors arabic-heading">
                    {course.name}
                  </h3>

                  {/* Course Info */}
                  <div className="flex items-center justify-between mb-4">
                    {/* <div className="flex items-center space-x-4">
                      <div className="flex items-center text-yellow-500">
                        <svg
                          className="w-4 h-4 ml-1"
                          fill="currentColor"
                          viewBox="0 0 20 20"
                        >
                          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                        </svg>
                        <span className="text-sm font-semibold">
                          {course.rating}
                        </span>
                        <span className="text-xs text-gray-500 mr-1">
                          ({course.reviewCount})
                        </span>
                      </div>
                      <div className="text-sm text-gray-600">
                        <span className="font-semibold text-indigo-600">
                          {course.price} ج.م
                        </span>
                      </div>
                    </div> */}
                    {course.availableSeats > 0 ? (
                      <div className="flex items-center text-green-600 text-sm">
                        <svg
                          className="w-4 h-4 ml-2"
                          fill="currentColor"
                          viewBox="0 0 20 20"
                        >
                          <path
                            fillRule="evenodd"
                            d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                            clipRule="evenodd"
                          />
                        </svg>
                        <span className="font-semibold">
                          {course.availableSeats} مقعد متاح
                        </span>
                      </div>
                    ) : (
                      <div className="flex items-center text-red-600 text-sm">
                        <svg
                          className="w-4 h-4 ml-2"
                          fill="currentColor"
                          viewBox="0 0 20 20"
                        >
                          <path
                            fillRule="evenodd"
                            d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                            clipRule="evenodd"
                          />
                        </svg>
                        <span className="font-semibold">مكتمل العدد</span>
                      </div>
                    )}
                    <div className="text-sm text-gray-500">
                      {course.duration}
                    </div>
                  </div>

                  <p className="text-gray-600 mb-4 leading-relaxed arabic-text">
                    برنامج تدريبي متخصص مع شهادة معتمدة من جامعة عين شمس
                  </p>

                  {/* Course Features */}
                  <div className="space-y-3 mb-6">
                    <div className="flex items-center text-sm text-gray-600">
                      <svg
                        className="w-4 h-4 text-green-500 ml-2"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          fillRule="evenodd"
                          d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                          clipRule="evenodd"
                        />
                      </svg>
                      شهادة معتمدة من جامعة عين شمس
                    </div>
                    <div className="flex items-center text-sm text-gray-600">
                      <svg
                        className="w-4 h-4 text-green-500 ml-2"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          fillRule="evenodd"
                          d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                          clipRule="evenodd"
                        />
                      </svg>
                      محتوي ومدربين معتمدين من جامعة عين شمس
                    </div>
                    <div className="flex items-center text-sm text-gray-600">
                      <svg
                        className="w-4 h-4 text-green-500 ml-2"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          fillRule="evenodd"
                          d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                          clipRule="evenodd"
                        />
                      </svg>
                      مرونة في التعلم (أونلاين/حضوري)
                    </div>
                  </div>

                  {/* Content Summary */}
                  <div className="mb-3">
                    <h4 className="text-sm font-semibold text-gray-800 mb-2 flex items-center">
                      <svg
                        className="w-4 h-4 text-indigo-600 ml-2"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          fillRule="evenodd"
                          d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z"
                          clipRule="evenodd"
                        />
                      </svg>
                      ملخص المحتوى
                    </h4>
                    <p className="text-sm text-gray-600 leading-relaxed arabic-text">
                      {course.contentSummary ||
                        "للحصول على تفاصيل المحتوى الكاملة، يرجى التسجيل في البرنامج أو التواصل معنا للاستفسار عن المنهج التفصيلي والمحاضرات."}
                    </p>
                  </div>
                  {/* for more info register now */}
                  <div className="flex items-center text-sm text-gray-600 mb-3">
                    <svg
                      className="w-4 h-4 text-indigo-600 ml-2"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path d="M10 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm.25-4.5a.75.75 0 01-1.5 0c0-2.5 3.5-2.25 3.5-5.25 0-1.38-1.12-2.5-2.5-2.5s-2.5 1.12-2.5 2.5a.75.75 0 01-1.5 0c0-2.21 1.79-4 4-4s4 1.79 4 4c0 3.25-3.5 3.5-3.5 5.25z" />
                    </svg>
                    للمزيد من التفاصيل سجل الآن{" "}
                  </div>
                  {/* Action Buttons */}
                  <div className="space-y-3">
                    {course.availableSeats > 0 ? (
                      <button
                        onClick={() => handleCourseSelect(course.name)}
                        className={`w-full py-3 px-6 rounded-xl font-semibold transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 ${
                          selectedCourse === course.name
                            ? "bg-gradient-to-r from-green-600 to-emerald-600 text-white"
                            : "bg-gradient-to-r from-indigo-600 to-blue-600 text-white hover:from-indigo-700 hover:to-blue-700"
                        }`}
                      >
                        {selectedCourse === course.name
                          ? "✓ تم اختيار هذه البرنامج"
                          : "سجل الآن مجاناً"}
                      </button>
                    ) : (
                      <button
                        disabled
                        className="w-full py-3 px-6 rounded-xl font-semibold bg-gray-300 text-gray-500 cursor-not-allowed"
                      >
                        مكتمل العدد
                      </button>
                    )}

                    {/* <div className="flex space-x-2">
                      <button
                        onClick={() => handleSeatBooking(course.id)}
                        disabled={course.availableSeats === 0}
                        className={`flex-1 py-2 px-4 rounded-lg text-sm font-medium transition-all duration-300 ${
                          course.availableSeats > 0
                            ? "bg-green-100 text-green-700 hover:bg-green-200"
                            : "bg-gray-100 text-gray-400 cursor-not-allowed"
                        }`}
                      >
                        حجز مقعد
                      </button>
                      <button
                        onClick={() => openReviewForm(course.id)}
                        className="flex-1 py-2 px-4 rounded-lg text-sm font-medium bg-yellow-100 text-yellow-700 hover:bg-yellow-200 transition-all duration-300"
                      >
                        تقييم البرنامج
                      </button>
                    </div> */}
                  </div>
                </div>
              ))
            )}
          </div>

          <div className="text-center">
            <button
              id="all-courses"
              onClick={() => {
                setShowAllCourses(!showAllCourses);
                if (showAllCourses) {
                  window.scroll({
                    top: 2400,
                    behavior: "smooth",
                  });
                }
              }}
              className="bg-white text-indigo-600 px-8 py-3 rounded-lg font-semibold hover:bg-indigo-50 transition-colors border-2 border-indigo-600"
            >
              {showAllCourses
                ? "إخفاء البرامج"
                : `عرض جميع البرامج (${filteredCourses.length} برنامج)`}
            </button>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section id="features" className="py-20 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
              لماذا تختار برامج eertqaa من جامعة عين شمس؟
            </h2>
            <p className="text-xl text-gray-600">
              مميزات فريدة تجعل من برامجنا الخيار الأمثل لك
            </p>
          </div>

          <div className="grid md:grid-cols-3 gap-8">
            <div className="text-center p-6">
              <div className="w-16 h-16 bg-indigo-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <svg
                  className="w-8 h-8 text-indigo-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
                  />
                </svg>
              </div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">
                شهادة معتمدة
              </h3>
              <p className="text-gray-600">
                شهادة مختومة بختم النسر من جامعة عين شمس
              </p>
            </div>

            <div className="text-center p-6">
              <div className="w-16 h-16 bg-indigo-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <svg
                  className="w-8 h-8 text-indigo-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"
                  />
                </svg>
              </div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">
                مرونة في التعلم
              </h3>
              <p className="text-gray-600">
                برامج أونلاين عبر زوم أو حضورياً في الجامعة
              </p>
            </div>

            <div className="text-center p-6">
              <div className="w-16 h-16 bg-indigo-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <svg
                  className="w-8 h-8 text-indigo-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"
                  />
                </svg>
              </div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">
                مجموعات صغيرة
              </h3>
              <p className="text-gray-600">
                تعلم في مجموعات محدودة العدد لضمان الجودة
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* About Section */}
      <section id="about" className="py-20 bg-gray-100">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid lg:grid-cols-2 gap-12 items-center">
            <div>
              <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-6">
                كيفية تنفيذ البرنامج؟
              </h2>
              <div className="space-y-6">
                <div className="flex items-start">
                  <div className="flex-shrink-0 w-8 h-8 bg-indigo-600 text-white rounded-full flex items-center justify-center text-sm font-bold">
                    1
                  </div>
                  <div className="mr-4">
                    <h3 className="text-lg font-semibold text-gray-900 mb-2">
                      التسجيل
                    </h3>
                    <p className="text-gray-600">
                      سجل بياناتك وانتظر تكوين المجموعة
                    </p>
                  </div>
                </div>
                {/* <div className="flex items-start">
                  <div className="flex-shrink-0 w-8 h-8 bg-indigo-600 text-white rounded-full flex items-center justify-center text-sm font-bold">
                    2
                  </div>
                  <div className="mr-4">
                    <h3 className="text-lg font-semibold text-gray-900 mb-2">
                      تكوين المجموعة
                    </h3>
                    <p className="text-gray-600">
                      عند اكتمال العدد المطلوب، تبدأ البرنامج الشهر القادم
                    </p>
                  </div>
                </div> */}
                <div className="flex items-start">
                  <div className="flex-shrink-0 w-8 h-8 bg-indigo-600 text-white rounded-full flex items-center justify-center text-sm font-bold">
                    2
                  </div>
                  <div className="mr-4">
                    <h3 className="text-lg font-semibold text-gray-900 mb-2">
                      البرنامج الدراسي
                    </h3>
                    <p className="text-gray-600">
                      برامج أونلاين عبر زوم أو حضورياً في جامعة عين شمس
                    </p>
                  </div>
                </div>
                <div className="flex items-start">
                  <div className="flex-shrink-0 w-8 h-8 bg-indigo-600 text-white rounded-full flex items-center justify-center text-sm font-bold">
                    4
                  </div>
                  <div className="mr-4">
                    <h3 className="text-lg font-semibold text-gray-900 mb-2">
                      الحصول على الشهادة
                    </h3>
                    <p className="text-gray-600">
                      شهادة مختومة بختم النسر من جامعة عين شمس
                    </p>
                  </div>
                </div>
              </div>
            </div>
            <div className="bg-white p-8 rounded-lg shadow-lg">
              <h3 className="text-2xl font-bold text-gray-900 mb-4">
                جامعة عين شمس
              </h3>
              <p className="text-gray-600 mb-4">
                إحدى أعرق الجامعات المصرية، تأسست عام 1950 وتضم 15 كلية ومركزاً
                علمياً متخصصاً.
              </p>
              <div className="flex items-center text-indigo-600">
                <svg
                  className="w-5 h-5 ml-2"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <path
                    fillRule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    clipRule="evenodd"
                  />
                </svg>
                <span className="font-semibold">شهادة معتمدة ومعترف بها</span>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Registration Form */}
      <section
        id="register"
        className="py-24 bg-gradient-to-br from-indigo-600 via-blue-600 to-purple-700 relative overflow-hidden"
      >
        {/* Background Elements */}
        <div className="absolute inset-0 bg-black opacity-10"></div>
        <div className="absolute top-0 right-0 w-96 h-96 bg-white rounded-full mix-blend-overlay filter blur-xl opacity-20"></div>
        <div className="absolute bottom-0 left-0 w-96 h-96 bg-white rounded-full mix-blend-overlay filter blur-xl opacity-20"></div>

        <div className="relative max-w-5xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <div className="inline-flex items-center px-4 py-2 rounded-full bg-white/20 text-white text-sm font-medium mb-6">
              <svg
                className="w-4 h-4 ml-2"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  fillRule="evenodd"
                  d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                  clipRule="evenodd"
                />
              </svg>
              تسجيل مجاني
            </div>
            <h2 className="text-4xl md:text-5xl font-bold text-white mb-6 arabic-heading">
              سجل الآن
            </h2>
            <p className="text-xl text-indigo-100 max-w-2xl mx-auto arabic-text">
              احجز مكانك في البرنامج القادمة واحصل على شهادة معتمدة من جامعة عين
              شمس
            </p>
          </div>

          <div className="bg-white text-background rounded-3xl shadow-2xl p-8 md:p-12">
            {selectedCourse && (
              <div className="mb-6 p-4 bg-green-50 border border-green-200 rounded-xl">
                <div className="flex items-center">
                  <svg
                    className="w-5 h-5 text-green-600 ml-2"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      fillRule="evenodd"
                      d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                      clipRule="evenodd"
                    />
                  </svg>
                  <span className="text-green-800 font-semibold">
                    تم اختيار البرنامج: {selectedCourse}
                  </span>
                </div>
              </div>
            )}
            {/* Success Message */}
            {submitSuccess && (
              <div
                id="success-message"
                className="mb-8 p-6 bg-green-50 border-2 border-green-200 rounded-2xl"
              >
                <div className="flex items-center">
                  <svg
                    className="w-8 h-8 text-green-600 ml-3"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      fillRule="evenodd"
                      d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                      clipRule="evenodd"
                    />
                  </svg>
                  <div>
                    <h4 className="text-green-800 font-bold text-lg">
                      تم إرسال الطلب بنجاح!
                    </h4>
                    <p className="text-green-700 mt-1">{submitMessage}</p>
                    <p className="text-green-600 text-sm mt-2">
                      سيتم التواصل معك قريباً لتأكيد التسجيل.
                    </p>
                  </div>
                </div>
              </div>
            )}

            {/* Global Error Message */}
            {formErrors.submit && (
              <div className="mb-8 p-6 bg-red-50 border-2 border-red-200 rounded-2xl">
                <div className="flex items-center">
                  <svg
                    className="w-8 h-8 text-red-600 ml-3"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      fillRule="evenodd"
                      d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
                      clipRule="evenodd"
                    />
                  </svg>
                  <div>
                    <h4 className="text-red-800 font-bold text-lg">
                      خطأ في إرسال الطلب
                    </h4>
                    <p className="text-red-700 mt-1">{formErrors.submit}</p>
                  </div>
                </div>
              </div>
            )}

            <form
              className="space-y-8"
              onSubmit={(e) => {
                e.preventDefault();
                handleFormSubmit(e);
              }}
            >
              {/* Personal Information */}
              <div className="bg-gray-100 rounded-2xl p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-6 flex items-center">
                  <svg
                    className="w-5 h-5 text-indigo-600 ml-2"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      fillRule="evenodd"
                      d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"
                      clipRule="evenodd"
                    />
                  </svg>
                  المعلومات الشخصية
                </h3>
                {/* <div className="grid md:grid-cols-2 gap-6"> */}
                <div className="group">
                  <label
                    htmlFor="firstName"
                    className="block text-sm font-semibold text-gray-700 mb-3"
                  >
                    الاسم *
                  </label>
                  <div className="relative">
                    <input
                      type="text"
                      id="firstName"
                      name="firstName"
                      required
                      onInput={() => clearFieldError("firstName")}
                      className={`w-full px-4 py-4 border-2 rounded-xl focus:ring-2 transition-all duration-300 bg-white ${
                        formErrors.firstName
                          ? "border-red-500 focus:ring-red-500 focus:border-red-500"
                          : "border-gray-200 focus:ring-indigo-500 focus:border-indigo-500 hover:border-gray-300"
                      }`}
                      placeholder="أدخل اسمك الأول"
                    />
                    <div className="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                      {formErrors.firstName ? (
                        <svg
                          className="h-5 w-5 text-red-500"
                          fill="currentColor"
                          viewBox="0 0 20 20"
                        >
                          <path
                            fillRule="evenodd"
                            d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
                            clipRule="evenodd"
                          />
                        </svg>
                      ) : (
                        <svg
                          className="h-5 w-5 text-gray-400"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth={2}
                            d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                          />
                        </svg>
                      )}
                    </div>
                  </div>
                  {formErrors.firstName && (
                    <p className="mt-2 text-sm text-red-600 flex items-center">
                      <svg
                        className="w-4 h-4 ml-1"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          fillRule="evenodd"
                          d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
                          clipRule="evenodd"
                        />
                      </svg>
                      {formErrors.firstName}
                    </p>
                  )}
                </div>
                {/* </div> */}
              </div>

              {/* Contact Information */}
              <div className="bg-gray-100 rounded-2xl p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-6 flex items-center">
                  <svg
                    className="w-5 h-5 text-indigo-600 ml-2"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" />
                    <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" />
                  </svg>
                  معلومات التواصل
                </h3>
                {/* <div className="grid md:grid-cols-2 gap-6"> */}
                {/* <div className="group">
                    <label
                      htmlFor="email"
                      className="block text-sm font-semibold text-gray-700 mb-3"
                    >
                      البريد الإلكتروني *
                    </label>
                    <div className="relative">
                      <input
                        type="email"
                        id="email"
                        name="email"
                        required
                        className="w-full px-4 py-4 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-300 bg-white hover:border-gray-300"
                        placeholder="example@email.com"
                      />
                      <div className="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                        <svg
                          className="h-5 w-5 text-gray-400"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth={2}
                            d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
                          />
                        </svg>
                      </div>
                    </div>
                  </div> */}
                <div className="group">
                  <label
                    htmlFor="phone"
                    className="block text-sm font-semibold text-gray-700 mb-3"
                  >
                    رقم الهاتف *
                  </label>
                  <div className="relative">
                    <input
                      type="tel"
                      id="phone"
                      name="phone"
                      required
                      onInput={() => clearFieldError("phone")}
                      className={`w-full px-4 py-4 border-2 rounded-xl focus:ring-2 transition-all duration-300 bg-white ${
                        formErrors.phone
                          ? "border-red-500 focus:ring-red-500 focus:border-red-500"
                          : "border-gray-200 focus:ring-indigo-500 focus:border-indigo-500 hover:border-gray-300"
                      }`}
                      placeholder="+20 123 456 7890"
                    />
                    <div className="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                      {formErrors.phone ? (
                        <svg
                          className="h-5 w-5 text-red-500"
                          fill="currentColor"
                          viewBox="0 0 20 20"
                        >
                          <path
                            fillRule="evenodd"
                            d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
                            clipRule="evenodd"
                          />
                        </svg>
                      ) : (
                        <svg
                          className="h-5 w-5 text-gray-400"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth={2}
                            d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"
                          />
                        </svg>
                      )}
                    </div>
                  </div>
                  {formErrors.phone && (
                    <p className="mt-2 text-sm text-red-600 flex items-center">
                      <svg
                        className="w-4 h-4 ml-1"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          fillRule="evenodd"
                          d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
                          clipRule="evenodd"
                        />
                      </svg>
                      {formErrors.phone}
                    </p>
                  )}
                </div>
                {/* </div> */}
              </div>

              {/* Course Selection */}
              <div className="bg-gray-100 rounded-2xl p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-6 flex items-center">
                  <svg
                    className="w-5 h-5 text-indigo-600 ml-2"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  اختيار البرنامج التدريبية
                </h3>
                <div className="group">
                  <label
                    htmlFor="course"
                    className="block text-sm font-semibold text-gray-700 mb-3"
                  >
                    اختر البرنامج التدريبية *
                  </label>
                  <div className="relative">
                    <select
                      id="course"
                      name="course"
                      required
                      value={selectedCourse}
                      onChange={(e) => {
                        setSelectedCourse(e.target.value);
                        clearFieldError("course");
                      }}
                      className={`w-full px-4 py-4 border-2 rounded-xl focus:ring-2 transition-all duration-300 bg-white appearance-none ${
                        formErrors.course
                          ? "border-red-500 focus:ring-red-500 focus:border-red-500"
                          : "border-gray-200 focus:ring-indigo-500 focus:border-indigo-500 hover:border-gray-300"
                      }`}
                    >
                      <option value="">اختر البرنامج التدريبية</option>
                      {courses.map((course) => (
                        <option key={course.id} value={course.name}>
                          {course.name} - {course.category}
                        </option>
                      ))}
                    </select>
                    <div className="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                      {formErrors.course ? (
                        <svg
                          className="h-5 w-5 text-red-500"
                          fill="currentColor"
                          viewBox="0 0 20 20"
                        >
                          <path
                            fillRule="evenodd"
                            d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
                            clipRule="evenodd"
                          />
                        </svg>
                      ) : (
                        <svg
                          className="h-5 w-5 text-gray-400"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth={2}
                            d="M19 9l-7 7-7-7"
                          />
                        </svg>
                      )}
                    </div>
                  </div>
                  {formErrors.course && (
                    <p className="mt-2 text-sm text-red-600 flex items-center">
                      <svg
                        className="w-4 h-4 ml-1"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          fillRule="evenodd"
                          d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
                          clipRule="evenodd"
                        />
                      </svg>
                      {formErrors.course}
                    </p>
                  )}
                </div>
              </div>

              {/* Learning Preferences */}
              <div className="bg-gray-100 rounded-2xl p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-6 flex items-center">
                  <svg
                    className="w-5 h-5 text-indigo-600 ml-2"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      fillRule="evenodd"
                      d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
                      clipRule="evenodd"
                    />
                  </svg>
                  تفضيلات التعلم
                </h3>
                <div className="group">
                  <label
                    htmlFor="preferredMethod"
                    className="block text-sm font-semibold text-gray-700 mb-3"
                  >
                    طريقة التعلم المفضلة *
                  </label>
                  <div className="relative">
                    <select
                      id="preferredMethod"
                      name="preferredMethod"
                      required
                      onChange={() => clearFieldError("preferredMethod")}
                      className={`w-full px-4 py-4 border-2 rounded-xl focus:ring-2 transition-all duration-300 bg-white appearance-none ${
                        formErrors.preferredMethod
                          ? "border-red-500 focus:ring-red-500 focus:border-red-500"
                          : "border-gray-200 focus:ring-indigo-500 focus:border-indigo-500 hover:border-gray-300"
                      }`}
                    >
                      <option value="">اختر طريقة التعلم</option>
                      <option value="online">أونلاين عبر زوم</option>
                      <option value="offline">حضورياً في الجامعة</option>
                    </select>
                    <div className="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                      {formErrors.preferredMethod ? (
                        <svg
                          className="h-5 w-5 text-red-500"
                          fill="currentColor"
                          viewBox="0 0 20 20"
                        >
                          <path
                            fillRule="evenodd"
                            d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
                            clipRule="evenodd"
                          />
                        </svg>
                      ) : (
                        <svg
                          className="h-5 w-5 text-gray-400"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth={2}
                            d="M19 9l-7 7-7-7"
                          />
                        </svg>
                      )}
                    </div>
                  </div>
                  {formErrors.preferredMethod && (
                    <p className="mt-2 text-sm text-red-600 flex items-center">
                      <svg
                        className="w-4 h-4 ml-1"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          fillRule="evenodd"
                          d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
                          clipRule="evenodd"
                        />
                      </svg>
                      {formErrors.preferredMethod}
                    </p>
                  )}
                </div>
              </div>

              {/* Additional Message */}
              <div className="bg-gray-100 rounded-2xl p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-6 flex items-center">
                  <svg
                    className="w-5 h-5 text-indigo-600 ml-2"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      fillRule="evenodd"
                      d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z"
                      clipRule="evenodd"
                    />
                  </svg>
                  رسالة إضافية
                </h3>
                <div className="group">
                  <label
                    htmlFor="message"
                    className="block text-sm font-semibold text-gray-700 mb-3"
                  >
                    أخبرنا عن توقعاتك أو أي استفسارات (اختياري)
                  </label>
                  <textarea
                    id="message"
                    name="message"
                    rows={4}
                    className="w-full px-4 py-4 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-300 bg-white hover:border-gray-300 resize-none"
                    placeholder="أخبرنا عن توقعاتك من البرنامج أو أي استفسارات لديك..."
                  ></textarea>
                </div>
              </div>

              {/* Voice Recording */}
              <div className="bg-gray-100 rounded-2xl p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-6 flex items-center">
                  <svg
                    className="w-5 h-5 text-indigo-600 ml-2"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      fillRule="evenodd"
                      d="M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z"
                      clipRule="evenodd"
                    />
                  </svg>
                  رسالة صوتية (اختياري)
                </h3>
                <div className="group">
                  <label className="block text-sm font-semibold text-gray-700 mb-3">
                    أرسل رسالة صوتية لتخبرنا عن توقعاتك أو استفساراتك
                  </label>

                  {(recordingError || formErrors.voiceMessage) && (
                    <div className="mb-4 p-3 bg-red-50 border border-red-200 rounded-lg">
                      <div className="flex items-center">
                        <svg
                          className="w-5 h-5 text-red-600 ml-2"
                          fill="currentColor"
                          viewBox="0 0 20 20"
                        >
                          <path
                            fillRule="evenodd"
                            d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
                            clipRule="evenodd"
                          />
                        </svg>
                        <span className="text-red-800 text-sm">
                          {recordingError || formErrors.voiceMessage}
                        </span>
                      </div>
                    </div>
                  )}

                  {/* Voice Upload Progress */}
                  {isUploadingVoice && (
                    <div className="mb-4 p-3 bg-blue-50 border border-blue-200 rounded-lg">
                      <div className="flex items-center">
                        <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-blue-600 ml-2"></div>
                        <span className="text-blue-800 text-sm">
                          جاري رفع الرسالة الصوتية...
                        </span>
                      </div>
                    </div>
                  )}

                  {!audioBlob ? (
                    <div className="space-y-4">
                      {!isRecording ? (
                        <button
                          type="button"
                          onClick={startRecording}
                          className="w-full flex items-center justify-center px-6 py-4 bg-gradient-to-r from-red-500 to-red-600 text-white rounded-xl hover:from-red-600 hover:to-red-700 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1"
                        >
                          <svg
                            className="w-6 h-6 ml-2"
                            fill="currentColor"
                            viewBox="0 0 20 20"
                          >
                            <path
                              fillRule="evenodd"
                              d="M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z"
                              clipRule="evenodd"
                            />
                          </svg>
                          ابدأ التسجيل
                        </button>
                      ) : (
                        <div className="space-y-4">
                          <div className="flex items-center justify-center space-x-4">
                            <div className="flex items-center space-x-2">
                              <div className="w-3 h-3 bg-red-500 rounded-full animate-pulse"></div>
                              <span className="text-red-600 font-semibold">
                                جاري التسجيل...
                              </span>
                            </div>
                            <div className="text-lg font-mono font-bold text-gray-900">
                              {formatTime(recordingTime)}
                            </div>
                          </div>

                          <div className="flex space-x-3">
                            <button
                              type="button"
                              onClick={stopRecording}
                              className="flex-1 flex items-center justify-center px-4 py-3 bg-gray-600 text-white rounded-xl hover:bg-gray-700 transition-all duration-300"
                            >
                              <svg
                                className="w-5 h-5 ml-2"
                                fill="currentColor"
                                viewBox="0 0 20 20"
                              >
                                <path
                                  fillRule="evenodd"
                                  d="M10 18a8 8 0 100-16 8 8 0 000 16zM8 7a1 1 0 00-1 1v4a1 1 0 001 1h4a1 1 0 001-1V8a1 1 0 00-1-1H8z"
                                  clipRule="evenodd"
                                />
                              </svg>
                              إيقاف التسجيل
                            </button>
                          </div>

                          <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-3">
                            <p className="text-yellow-800 text-sm text-center">
                              💡 نصيحة: تحدث بوضوح واذكر اسمك والبرنامج المطلوبة
                            </p>
                          </div>
                        </div>
                      )}
                    </div>
                  ) : (
                    <div className="space-y-4">
                      <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                        <div className="flex items-center justify-between mb-3">
                          <div className="flex items-center">
                            <svg
                              className="w-5 h-5 text-green-600 ml-2"
                              fill="currentColor"
                              viewBox="0 0 20 20"
                            >
                              <path
                                fillRule="evenodd"
                                d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                                clipRule="evenodd"
                              />
                            </svg>
                            <span className="text-green-800 font-semibold">
                              تم التسجيل بنجاح!
                            </span>
                          </div>
                          <span className="text-green-700 font-mono text-sm">
                            {formatTime(recordingTime)}
                          </span>
                        </div>

                        <div className="flex space-x-2">
                          <button
                            type="button"
                            onClick={playRecording}
                            className="flex-1 flex items-center justify-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-all duration-300"
                          >
                            {isPlaying ? (
                              <>
                                <svg
                                  className="w-4 h-4 ml-2"
                                  fill="currentColor"
                                  viewBox="0 0 20 20"
                                >
                                  <path
                                    fillRule="evenodd"
                                    d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zM7 8a1 1 0 012 0v4a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v4a1 1 0 102 0V8a1 1 0 00-1-1z"
                                    clipRule="evenodd"
                                  />
                                </svg>
                                إيقاف
                              </>
                            ) : (
                              <>
                                <svg
                                  className="w-4 h-4 ml-2"
                                  fill="currentColor"
                                  viewBox="0 0 20 20"
                                >
                                  <path
                                    fillRule="evenodd"
                                    d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z"
                                    clipRule="evenodd"
                                  />
                                </svg>
                                تشغيل
                              </>
                            )}
                          </button>

                          <button
                            type="button"
                            onClick={() => {
                              deleteRecording();
                              setRecordingError(null);
                            }}
                            className="flex items-center justify-center px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-all duration-300"
                          >
                            <svg
                              className="w-4 h-4 ml-2"
                              fill="currentColor"
                              viewBox="0 0 20 20"
                            >
                              <path
                                fillRule="evenodd"
                                d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z"
                                clipRule="evenodd"
                              />
                            </svg>
                            حذف
                          </button>
                        </div>
                      </div>
                    </div>
                  )}

                  <audio ref={audioRef} className="hidden" />

                  <div className="mt-3 text-xs text-gray-500">
                    💡 الرسالة الصوتية ستساعدنا في فهم احتياجاتك بشكل أفضل
                  </div>
                </div>
              </div>

              {/* Submit Button */}
              <div className="text-center pt-6">
                <button
                  type="submit"
                  disabled={isSubmitting || isUploadingVoice}
                  className={`group py-5 px-12 rounded-2xl text-lg font-bold transition-all duration-300 shadow-2xl w-full md:w-auto ${
                    isSubmitting || isUploadingVoice
                      ? "bg-gray-400 cursor-not-allowed"
                      : "bg-gradient-to-r from-indigo-600 to-blue-600 text-white hover:from-indigo-700 hover:to-blue-700 hover:shadow-indigo-500/25 transform hover:-translate-y-1"
                  }`}
                >
                  <span className="flex items-center justify-center">
                    {isSubmitting || isUploadingVoice ? (
                      <>
                        <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white ml-2"></div>
                        {isUploadingVoice
                          ? "جاري رفع الرسالة الصوتية..."
                          : "جاري إرسال الطلب..."}
                      </>
                    ) : (
                      <>
                        <svg
                          className="w-5 h-5 ml-2 group-hover:scale-110 transition-transform"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth={2}
                            d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"
                          />
                        </svg>
                        إرسال الطلب الآن
                      </>
                    )}
                  </span>
                </button>
                <p className="text-sm text-gray-500 mt-4">
                  * جميع الحقول المطلوبة يجب ملؤها
                </p>
                {(isSubmitting || isUploadingVoice) && (
                  <p className="text-sm text-blue-600 mt-2">
                    يرجى الانتظار... لا تقم بإغلاق الصفحة
                  </p>
                )}
              </div>
            </form>
          </div>
        </div>
      </section>

      {/* Testimonials Section */}
      <section className="py-24 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <div className="inline-flex items-center px-4 py-2 rounded-full bg-indigo-100 text-indigo-800 text-sm font-medium mb-6">
              <svg
                className="w-4 h-4 ml-2"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  fillRule="evenodd"
                  d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z"
                  clipRule="evenodd"
                />
              </svg>
              آراء الطلاب
            </div>
            <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6 arabic-heading">
              ماذا يقول طلابنا؟
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto arabic-text">
              انضم إلى آلاف الطلاب الذين حصلوا على شهادات معتمدة من جامعة عين
              شمس
            </p>
          </div>

          <div className="grid md:grid-cols-3 gap-8">
            {reviews.slice(0, 3).map((review, index) => {
              const course = courses.find((c) => c.id === review.courseId);
              const colors = [
                "from-indigo-50 to-blue-50",
                "from-green-50 to-emerald-50",
                "from-purple-50 to-pink-50",
              ];
              const bgColors = [
                "bg-indigo-600",
                "bg-green-600",
                "bg-purple-600",
              ];

              return (
                <div
                  key={review.id}
                  className={`bg-gradient-to-br ${colors[index]} rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300`}
                >
                  {/* Review Header */}
                  <div className="flex items-start justify-between mb-6">
                    <div className="flex items-center">
                      <div
                        className={`w-14 h-14 ${bgColors[index]} rounded-full flex items-center justify-center text-white font-bold text-xl shadow-lg`}
                      >
                        {review.studentName
                          .split(" ")
                          .map((n) => n[0])
                          .join("")}
                      </div>
                      <div className="mr-4">
                        <div className="flex items-center space-x-2">
                          <h4 className="font-bold text-gray-900 text-lg">
                            {review.studentName}
                          </h4>
                          {review.verified && (
                            <div className="w-5 h-5 bg-green-500 rounded-full flex items-center justify-center">
                              <svg
                                className="w-3 h-3 text-white"
                                fill="currentColor"
                                viewBox="0 0 20 20"
                              >
                                <path
                                  fillRule="evenodd"
                                  d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                                  clipRule="evenodd"
                                />
                              </svg>
                            </div>
                          )}
                        </div>
                        <p className="text-sm text-gray-600 font-medium">
                          {review.jobTitle}
                        </p>
                        <p className="text-xs text-gray-500">
                          {review.company}
                        </p>
                        <p className="text-xs text-indigo-600 font-semibold mt-1">
                          {course?.name || "برنامج تدريبية"}
                        </p>
                      </div>
                    </div>
                    <div className="text-right">
                      <div className="flex text-yellow-400 mb-2">
                        {[...Array(5)].map((_, i) => (
                          <svg
                            key={i}
                            className={`w-4 h-4 ${
                              i < review.rating
                                ? "text-yellow-400"
                                : "text-gray-300"
                            }`}
                            fill="currentColor"
                            viewBox="0 0 20 20"
                          >
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                          </svg>
                        ))}
                      </div>
                      <p className="text-xs text-gray-500">{review.date}</p>
                    </div>
                  </div>

                  {/* Review Content */}
                  <div className="relative">
                    <div className="absolute top-0 right-0 text-6xl text-gray-200 font-serif leading-none">
                      &quot;
                    </div>
                    <p className="text-gray-700 leading-relaxed mb-4 arabic-quote relative z-10 pr-8">
                      {review.comment}
                    </p>
                  </div>

                  {/* Review Footer */}
                  <div className="flex items-center justify-between pt-4 border-t border-gray-200">
                    <div className="flex items-center text-sm text-gray-500">
                      <svg
                        className="w-4 h-4 ml-2"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          fillRule="evenodd"
                          d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                          clipRule="evenodd"
                        />
                      </svg>
                      <span>تقييم موثق</span>
                    </div>
                    <div className="text-sm font-semibold text-indigo-600">
                      {review.rating}/5
                    </div>
                  </div>
                </div>
              );
            })}
          </div>

          {/* Add Review Button */}
          <div className="text-center mt-12">
            <button
              onClick={() => openReviewForm(1)}
              className="inline-flex items-center px-8 py-4 bg-gradient-to-r from-yellow-500 to-orange-500 text-white font-semibold rounded-xl hover:from-yellow-600 hover:to-orange-600 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1"
            >
              <svg
                className="w-5 h-5 ml-2"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
              </svg>
              شاركنا تجربتك
            </button>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-900 text-white py-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid md:grid-cols-3 gap-8">
            <div>
              <h3 className="text-2xl font-bold mb-4">eertqaa</h3>
              <p className="text-gray-300 mb-4">
                برامج تدريبية معتمدة من جامعة عين شمس
              </p>
            </div>
            <div>
              <h4 className="text-lg font-semibold mb-4">روابط سريعة</h4>
              <ul className="space-y-2">
                <li>
                  <a
                    href="#courses"
                    className="text-gray-300 hover:text-white transition-colors"
                  >
                    البرامج
                  </a>
                </li>
                <li>
                  <a
                    href="#about"
                    className="text-gray-300 hover:text-white transition-colors"
                  >
                    عن البرنامج
                  </a>
                </li>
                <li>
                  <a
                    href="#features"
                    className="text-gray-300 hover:text-white transition-colors"
                  >
                    المميزات
                  </a>
                </li>
                <li>
                  <a
                    href="#register"
                    className="text-gray-300 hover:text-white transition-colors"
                  >
                    التسجيل
                  </a>
                </li>
              </ul>
            </div>
            <div>
              <h4 className="text-lg font-semibold mb-4">تواصل معنا</h4>
              <div className="space-y-2 text-gray-300">
                <p>
                  البريد الإلكتروني:{" "}
                  <a href="mailto:info@eertqaa.com">info@eertqaa.com</a>
                </p>
                <p>
                  الهاتف:{" "}
                  <a dir="ltr" href="tel:+201234567890">
                    +20 123 456 7890
                  </a>
                </p>
                <p>جامعة عين شمس، القاهرة</p>
              </div>
            </div>
          </div>
          <div className="border-t border-gray-700 mt-8 pt-8 text-center text-gray-300">
            <p>&copy; 2024 eertqaa. جميع الحقوق محفوظة.</p>
          </div>
        </div>
      </footer>

      {/* Review Form Modal */}
      {showReviewForm && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white text-background rounded-2xl p-8 w-full sm:w-[90vh] max-h-[90vh] overflow-y-auto">
            <div className="flex justify-between items-center mb-6">
              <h3 className="text-2xl font-bold text-gray-900 arabic-heading">
                تقييم البرنامج
              </h3>
              <button
                onClick={() => setShowReviewForm(false)}
                className="text-gray-400 hover:text-gray-600 transition-colors"
              >
                <svg
                  className="w-6 h-6"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M6 18L18 6M6 6l12 12"
                  />
                </svg>
              </button>
            </div>

            <form onSubmit={handleReviewSubmit} className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-semibold text-gray-700 mb-2">
                    الاسم الكامل *
                  </label>
                  <input
                    type="text"
                    value={reviewFormData.studentName}
                    onChange={(e) =>
                      setReviewFormData({
                        ...reviewFormData,
                        studentName: e.target.value,
                      })
                    }
                    className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-300"
                    placeholder="أدخل اسمك الكامل"
                    required
                  />
                </div>
                <div>
                  <label className="block text-sm font-semibold text-gray-700 mb-2">
                    المسمى الوظيفي
                  </label>
                  <input
                    type="text"
                    value={reviewFormData.jobTitle}
                    onChange={(e) =>
                      setReviewFormData({
                        ...reviewFormData,
                        jobTitle: e.target.value,
                      })
                    }
                    className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-300"
                    placeholder="مثال: مطور برمجيات"
                  />
                </div>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-2">
                  الشركة أو المؤسسة
                </label>
                <input
                  type="text"
                  value={reviewFormData.company}
                  onChange={(e) =>
                    setReviewFormData({
                      ...reviewFormData,
                      company: e.target.value,
                    })
                  }
                  className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-300"
                  placeholder="مثال: شركة التقنية المتقدمة"
                />
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-2">
                  التقييم *
                </label>
                <div className="flex space-x-1">
                  {[1, 2, 3, 4, 5].map((star) => (
                    <button
                      key={star}
                      type="button"
                      onClick={() =>
                        setReviewFormData({ ...reviewFormData, rating: star })
                      }
                      className={`w-10 h-10 transition-colors ${
                        star <= reviewFormData.rating
                          ? "text-yellow-400"
                          : "text-gray-300 hover:text-yellow-300"
                      }`}
                    >
                      <svg
                        className="w-full h-full"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                      </svg>
                    </button>
                  ))}
                </div>
                <p className="text-sm text-gray-500 mt-1">
                  {reviewFormData.rating === 5 && "ممتاز"}
                  {reviewFormData.rating === 4 && "جيد جداً"}
                  {reviewFormData.rating === 3 && "جيد"}
                  {reviewFormData.rating === 2 && "مقبول"}
                  {reviewFormData.rating === 1 && "ضعيف"}
                </p>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-2">
                  تقييمك للبرنامج *
                </label>
                <textarea
                  value={reviewFormData.comment}
                  onChange={(e) =>
                    setReviewFormData({
                      ...reviewFormData,
                      comment: e.target.value,
                    })
                  }
                  className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-300 resize-none"
                  rows={5}
                  placeholder="شاركنا تجربتك مع البرنامج... ما الذي أعجبك؟ كيف ساعدتك في تطوير مهاراتك؟ ما هي النتائج التي حققتها؟"
                  required
                />
                {/* <p className="text-xs text-gray-500 mt-2">
                  نصائح: اذكر النقاط الإيجابية، كيف ساعدتك البرنامج، والنتائج التي
                  حققتها
                </p> */}
              </div>

              <div className="flex space-x-3">
                <button
                  type="button"
                  onClick={() => setShowReviewForm(false)}
                  className="flex-1 py-2 px-3 rounded-xl font-semibold border-2 border-gray-300 text-gray-700 hover:bg-gray-50 transition-all duration-300"
                >
                  إلغاء
                </button>
                <button
                  type="submit"
                  className="flex-1 py-2 px-3 rounded-xl font-semibold bg-gradient-to-r from-indigo-600 to-blue-600 text-white hover:from-indigo-700 hover:to-blue-700 transition-all duration-300"
                >
                  إرسال التقييم
                </button>
              </div>
            </form>
          </div>
        </div>
      )}
    </div>
  );
}
